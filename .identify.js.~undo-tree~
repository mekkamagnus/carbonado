(undo-tree-save-format-version . 1)
"4a5b443d4921b1b9e038057b5004e4587fcf808a"
[nil nil nil nil (25649 6694 124564 0) 0 nil]
([nil nil ((nil rear-nonsticky nil 1 . 2) (#("
" 0 1 (fontified nil)) . -795) (undo-tree-id180 . -1) (1 . 796) (t 25649 6690 488448 845000)) nil (25649 6694 124562 0) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1)) nil (25649 6694 124553 0) 0 nil])
([nil current ((593 . 658) (#("const isOperator = character => OPERATORS.includes(character);
" 0 5 (font-lock-face font-lock-keyword-face face (font-lock-keyword-face tree-sitter-hl-face:keyword) fontified t) 5 6 (fontified t) 6 16 (font-lock-face font-lock-function-name-face face (font-lock-function-name-face tree-sitter-hl-face:function tree-sitter-hl-face:variable) fontified t) 16 17 (fontified t) 17 18 (face tree-sitter-hl-face:operator fontified t) 18 19 (fontified t) 19 28 (font-lock-face js2-function-param face (js2-function-param tree-sitter-hl-face:variable.parameter) fontified t) 28 29 (fontified t) 29 31 (face tree-sitter-hl-face:operator fontified t) 31 32 (fontified t) 32 41 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 41 42 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 42 50 (font-lock-face js2-function-call face (js2-function-call tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 50 51 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 51 60 (fontified t) 60 61 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 61 62 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 62 63 (fontified t)) . -593) (undo-tree-id0 . -6) (542 . 592) (#("const isQuote = character => character === '\"';
" 0 5 (font-lock-face font-lock-keyword-face face (font-lock-keyword-face tree-sitter-hl-face:keyword) fontified t) 5 6 (fontified t) 6 13 (font-lock-face font-lock-function-name-face face (font-lock-function-name-face tree-sitter-hl-face:function tree-sitter-hl-face:variable) fontified t) 13 14 (fontified t) 14 15 (face tree-sitter-hl-face:operator fontified t) 15 16 (fontified t) 16 25 (font-lock-face js2-function-param face (js2-function-param tree-sitter-hl-face:variable.parameter) fontified t) 25 26 (fontified t) 26 28 (face tree-sitter-hl-face:operator fontified t) 28 39 (fontified t) 39 42 (face tree-sitter-hl-face:operator fontified t) 42 43 (fontified t) 43 46 (font-lock-face font-lock-string-face face (font-lock-string-face tree-sitter-hl-face:string) fontified t) 46 47 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 47 48 (fontified t)) . -542) (undo-tree-id1 . -6) (434 . 471) (#("const isParenthesis = character =>
" 0 5 (font-lock-face font-lock-keyword-face face (font-lock-keyword-face tree-sitter-hl-face:keyword) fontified t) 5 6 (fontified t) 6 19 (font-lock-face font-lock-function-name-face face (font-lock-function-name-face tree-sitter-hl-face:function tree-sitter-hl-face:variable) fontified t) 19 20 (fontified t) 20 21 (face tree-sitter-hl-face:operator fontified t) 21 22 (fontified t) 22 31 (font-lock-face js2-function-param face (js2-function-param tree-sitter-hl-face:variable.parameter) fontified t) 31 32 (fontified t) 32 34 (face tree-sitter-hl-face:operator fontified t) 34 35 (fontified t)) . -434) (undo-tree-id2 . -6) (370 . 433) (#("const isClosingParenthesis = character => character === ')';
" 0 5 (font-lock-face font-lock-keyword-face face (font-lock-keyword-face tree-sitter-hl-face:keyword) fontified t) 5 6 (fontified t) 6 26 (font-lock-face font-lock-function-name-face face (font-lock-function-name-face tree-sitter-hl-face:function tree-sitter-hl-face:variable) fontified t) 26 27 (fontified t) 27 28 (face tree-sitter-hl-face:operator fontified t) 28 29 (fontified t) 29 38 (font-lock-face js2-function-param face (js2-function-param tree-sitter-hl-face:variable.parameter) fontified t) 38 39 (fontified t) 39 41 (face tree-sitter-hl-face:operator fontified t) 41 52 (fontified t) 52 55 (face tree-sitter-hl-face:operator fontified t) 55 56 (fontified t) 56 59 (font-lock-face font-lock-string-face face (font-lock-string-face tree-sitter-hl-face:string) fontified t) 59 60 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 60 61 (fontified t)) . -370) (undo-tree-id3 . -6) (306 . 369) (#("const isOpeningParenthesis = character => character === '(';
" 0 5 (font-lock-face font-lock-keyword-face face (font-lock-keyword-face tree-sitter-hl-face:keyword) fontified t) 5 6 (fontified t) 6 26 (font-lock-face font-lock-function-name-face face (font-lock-function-name-face tree-sitter-hl-face:function tree-sitter-hl-face:variable) fontified t) 26 27 (fontified t) 27 28 (face tree-sitter-hl-face:operator fontified t) 28 29 (fontified t) 29 38 (font-lock-face js2-function-param face (js2-function-param tree-sitter-hl-face:variable.parameter) fontified t) 38 39 (fontified t) 39 41 (face tree-sitter-hl-face:operator fontified t) 41 52 (fontified t) 52 55 (face tree-sitter-hl-face:operator fontified t) 55 56 (fontified t) 56 59 (font-lock-face font-lock-string-face face (font-lock-string-face tree-sitter-hl-face:string) fontified t) 59 60 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 60 61 (fontified t)) . -306) (undo-tree-id4 . -6) (249 . 305) (#("const isNumber = character => NUMBER.test(character);
" 0 5 (font-lock-face font-lock-keyword-face face (font-lock-keyword-face tree-sitter-hl-face:keyword) fontified t) 5 6 (fontified t) 6 14 (font-lock-face font-lock-function-name-face face (font-lock-function-name-face tree-sitter-hl-face:function tree-sitter-hl-face:variable) fontified t) 14 15 (fontified t) 15 16 (face tree-sitter-hl-face:operator fontified t) 16 17 (fontified t) 17 26 (font-lock-face js2-function-param face (js2-function-param tree-sitter-hl-face:variable.parameter) fontified t) 26 27 (fontified t) 27 29 (face tree-sitter-hl-face:operator fontified t) 29 30 (fontified t) 30 36 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 36 37 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 37 41 (font-lock-face js2-function-call face (js2-function-call tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 41 42 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 42 51 (fontified t) 51 52 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 52 53 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 53 54 (fontified t)) . -249) (undo-tree-id5 . -6) (184 . 248) (#("const isWhitespace = character => WHITESPACE.test(character);
" 0 5 (font-lock-face font-lock-keyword-face face (font-lock-keyword-face tree-sitter-hl-face:keyword) fontified t) 5 6 (fontified t) 6 18 (font-lock-face font-lock-function-name-face face (font-lock-function-name-face tree-sitter-hl-face:function tree-sitter-hl-face:variable) fontified t) 18 19 (fontified t) 19 20 (face tree-sitter-hl-face:operator fontified t) 20 21 (fontified t) 21 30 (font-lock-face js2-function-param face (js2-function-param tree-sitter-hl-face:variable.parameter) fontified t) 30 31 (fontified t) 31 33 (face tree-sitter-hl-face:operator fontified t) 33 34 (fontified t) 34 44 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 44 45 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 45 49 (font-lock-face js2-function-call face (js2-function-call tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 49 50 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 50 59 (fontified t) 59 60 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 60 61 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 61 62 (fontified t)) . -184) (undo-tree-id6 . -6) (127 . 183) (#("const isLetter = character => LETTER.test(character);
" 0 5 (font-lock-face font-lock-keyword-face face (font-lock-keyword-face tree-sitter-hl-face:keyword) fontified t) 5 6 (fontified t) 6 14 (font-lock-face font-lock-function-name-face face (font-lock-function-name-face tree-sitter-hl-face:function tree-sitter-hl-face:variable) fontified t) 14 15 (fontified t) 15 16 (face tree-sitter-hl-face:operator fontified t) 16 17 (fontified t) 17 26 (font-lock-face js2-function-param face (js2-function-param tree-sitter-hl-face:variable.parameter) fontified t) 26 27 (fontified t) 27 29 (face tree-sitter-hl-face:operator fontified t) 29 30 (fontified t) 30 36 (face (tree-sitter-hl-face:constant tree-sitter-hl-face:constructor) fontified t) 36 37 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 37 41 (font-lock-face js2-function-call face (js2-function-call tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 41 42 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 42 51 (fontified t) 51 52 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 52 53 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 53 54 (fontified t)) . -127) (undo-tree-id7 . -6) (81 . 126) (#("const OPERATORS = ['+', '-', '*', '/', '%'];
" 0 5 (font-lock-face font-lock-keyword-face face (font-lock-keyword-face tree-sitter-hl-face:keyword) fontified t) 5 6 (fontified t) 6 15 (font-lock-face font-lock-variable-name-face face (font-lock-variable-name-face tree-sitter-hl-face:constant tree-sitter-hl-face:constructor tree-sitter-hl-face:variable) fontified t) 15 16 (fontified t) 16 17 (face tree-sitter-hl-face:operator fontified t) 17 18 (fontified t) 18 19 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 19 22 (font-lock-face font-lock-string-face face (font-lock-string-face tree-sitter-hl-face:string) fontified t) 22 23 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 23 24 (fontified t) 24 27 (font-lock-face font-lock-string-face face (font-lock-string-face tree-sitter-hl-face:string) fontified t) 27 28 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 28 29 (fontified t) 29 32 (font-lock-face font-lock-string-face face (font-lock-string-face tree-sitter-hl-face:string) fontified t) 32 33 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 33 34 (fontified t) 34 37 (font-lock-face font-lock-string-face face (font-lock-string-face tree-sitter-hl-face:string) fontified t) 37 38 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 38 39 (fontified t) 39 42 (font-lock-face font-lock-string-face face (font-lock-string-face tree-sitter-hl-face:string) fontified t) 42 43 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 43 44 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 44 45 (fontified t)) . -81) (undo-tree-id8 . -6) (794 . 795) 1) nil (25649 6694 124338 0) 0 nil])
nil
